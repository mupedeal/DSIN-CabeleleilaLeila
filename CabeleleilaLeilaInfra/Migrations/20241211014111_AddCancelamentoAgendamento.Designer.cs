// <auto-generated />
using System;
using CabeleleilaLeilaInfra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabeleleilaLeilaInfra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241211014111_AddCancelamentoAgendamento")]
    partial class AddCancelamentoAgendamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.Property<string>("AgendamentosId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ServicosId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("AgendamentosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataCancelado")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Data", "Hora")
                        .IsUnique();

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = "6c029eaa-9659-4c42-947d-928d3298c6c5",
                            Celular = "+5563997022482",
                            Cpf = "280.855.471-04",
                            Email = "monica@turmadamonica.com.br",
                            Nome = "Mônica Cristina de Sousa"
                        },
                        new
                        {
                            Id = "ffc733f5-9771-4a35-8e06-ae2daa0e3141",
                            Celular = "+5547999097515",
                            Cpf = "958.997.989-04",
                            Email = "magali@turmadamonica.com.br",
                            Nome = "Magali Fernandes de Lima"
                        });
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Servico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            Id = "e68a40f8-f369-484c-bd02-5bc3aaa9d9cd",
                            Nome = "Corte de Cabelo"
                        },
                        new
                        {
                            Id = "2ab92d21-0bbd-454f-a653-a1c8f4e95d91",
                            Nome = "Escova"
                        },
                        new
                        {
                            Id = "a865f204-0a04-49db-b6e0-2d7356159615",
                            Nome = "Pé e Mão"
                        },
                        new
                        {
                            Id = "eb83365d-d997-49ae-bc1c-7212e51308bc",
                            Nome = "Tratamento Capilar"
                        },
                        new
                        {
                            Id = "96e1e559-43fb-4e41-a663-d8d7cf7fcc3d",
                            Nome = "Alisamento"
                        },
                        new
                        {
                            Id = "e948d655-61f2-4350-89ad-1d9625ef383d",
                            Nome = "Progressiva"
                        },
                        new
                        {
                            Id = "3a3e4388-17cd-4839-a148-c4d260ac8dee",
                            Nome = "Mecha/Luzes/Reflexos"
                        },
                        new
                        {
                            Id = "17321ef2-d355-4df9-835f-e8d79d0fcb85",
                            Nome = "Sobrancelha"
                        },
                        new
                        {
                            Id = "55e62c56-f2fd-43e9-84c1-9b6903374ef0",
                            Nome = "Depilação"
                        },
                        new
                        {
                            Id = "fe382b74-1b8f-4492-a79c-5da3650c7f15",
                            Nome = "Penteado e Maquiagem"
                        });
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabeleleilaLeilaDomain.Entities.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
