// <auto-generated />
using System;
using CabeleleilaLeilaInfra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabeleleilaLeilaInfra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241210161931_AddUniqueConstraintDataHora")]
    partial class AddUniqueConstraintDataHora
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.Property<string>("AgendamentosId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ServicosId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("AgendamentosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Data", "Hora")
                        .IsUnique();

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = "28a46966-4a15-4e93-9dc1-ac0c2b4cca2b",
                            Celular = "+5563997022482",
                            Cpf = "280.855.471-04",
                            Email = "monica@turmadamonica.com.br",
                            Nome = "Mônica Cristina de Sousa"
                        },
                        new
                        {
                            Id = "4486f380-52d2-4128-afcd-d9e0b32abf19",
                            Celular = "+5547999097515",
                            Cpf = "958.997.989-04",
                            Email = "magali@turmadamonica.com.br",
                            Nome = "Magali Fernandes de Lima"
                        });
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Servico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            Id = "9c0cc176-de42-4276-b6cf-2829a25581ff",
                            Nome = "Corte de Cabelo"
                        },
                        new
                        {
                            Id = "23ba3f0a-3729-4e3c-b371-62d164051319",
                            Nome = "Escova"
                        },
                        new
                        {
                            Id = "86c90757-6685-40df-9965-5df8da28da4a",
                            Nome = "Pé e Mão"
                        },
                        new
                        {
                            Id = "2f645263-78bb-4db9-85ef-5d958c0ebf3d",
                            Nome = "Tratamento Capilar"
                        },
                        new
                        {
                            Id = "d2fe81d7-911f-44f7-8fe2-eb580f7235d3",
                            Nome = "Alisamento"
                        },
                        new
                        {
                            Id = "5fb85b70-982d-4391-9d51-558d000099fb",
                            Nome = "Progressiva"
                        },
                        new
                        {
                            Id = "6e444c19-44a3-4e5a-bad7-3936d49f49e3",
                            Nome = "Mecha/Luzes/Reflexos"
                        },
                        new
                        {
                            Id = "e693c0a1-0f03-48bb-a3eb-96d3043eca4f",
                            Nome = "Sobrancelha"
                        },
                        new
                        {
                            Id = "c3bb0a22-82d3-48d1-aa18-ff61ade84a28",
                            Nome = "Depilação"
                        },
                        new
                        {
                            Id = "88ca3a25-0729-466f-b608-b818662d52ed",
                            Nome = "Penteado e Maquiagem"
                        });
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabeleleilaLeilaDomain.Entities.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
