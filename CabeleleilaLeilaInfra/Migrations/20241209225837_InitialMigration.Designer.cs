// <auto-generated />
using System;
using CabeleleilaLeilaInfra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabeleleilaLeilaInfra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241209225837_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.Property<string>("AgendamentosId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ServicosId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("AgendamentosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = "449459d5-0096-4106-a79b-ed30977daa90",
                            Celular = "+5563997022482",
                            Cpf = "280.855.471-04",
                            Email = "monica@turmadamonica.com.br",
                            Nome = "Mônica Cristina de Sousa"
                        },
                        new
                        {
                            Id = "6ad9fd36-fed0-4bee-8d93-51963a262fa2",
                            Celular = "+5547999097515",
                            Cpf = "958.997.989-04",
                            Email = "magali@turmadamonica.com.br",
                            Nome = "Magali Fernandes de Lima"
                        });
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Servico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            Id = "6a3bc99a-8aff-464b-9e30-e32cfc2df8d4",
                            Nome = "Corte de Cabelo"
                        },
                        new
                        {
                            Id = "80153a70-4ee1-451e-9dc2-acd840004b67",
                            Nome = "Escova"
                        },
                        new
                        {
                            Id = "ae4ceb2d-d4d2-4e21-b25f-f6431d8b2a59",
                            Nome = "Pé e Mão"
                        },
                        new
                        {
                            Id = "f17c5703-7e93-41e2-ab3b-2760997cfd4c",
                            Nome = "Tratamento Capilar"
                        },
                        new
                        {
                            Id = "e7fb9eec-fc71-47ff-8af6-344b64b4e5e2",
                            Nome = "Alisamento"
                        },
                        new
                        {
                            Id = "983d1003-bc80-47d6-8e5f-a14d2e46cc2e",
                            Nome = "Progressiva"
                        },
                        new
                        {
                            Id = "8c05bc68-237d-4bd7-aebf-5120ad1acb8f",
                            Nome = "Mecha/Luzes/Reflexos"
                        },
                        new
                        {
                            Id = "a7c557c2-3006-49c1-8e99-511f19587648",
                            Nome = "Sobrancelha"
                        },
                        new
                        {
                            Id = "9905b73d-ddbe-41e7-a3c7-db01b4fcc59e",
                            Nome = "Depilação"
                        },
                        new
                        {
                            Id = "58255861-3e9a-4b8e-be07-90a10e1f362c",
                            Nome = "Penteado e Maquiagem"
                        });
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabeleleilaLeilaDomain.Entities.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Agendamento", b =>
                {
                    b.HasOne("CabeleleilaLeilaDomain.Entities.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CabeleleilaLeilaDomain.Entities.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
